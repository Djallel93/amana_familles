/**
 * @file src/ui/menu.js (UPDATED)
 * @description Updated menu with insert/update functionality
 */

/**
 * Create custom menu on spreadsheet open
 */
function onOpen() {
    const ui = SpreadsheetApp.getUi();
    ui.createMenu('üì¶ Gestion Familles')
        .addItem('‚ûï Nouvelle Famille / ‚úèÔ∏è Mise √† Jour', 'showManualEntryDialog')
        .addSeparator()
        .addSubMenu(ui.createMenu('üì• Import en Masse')
            .addItem('‚öôÔ∏è Traiter Import', 'showBulkImportDialog')
            .addItem('üßπ Effacer Feuille Import', 'clearBulkImportSheetWithConfirm')
            .addItem('üìä Statistiques Import', 'showBulkImportStats')
            .addItem('üîÑ R√©initialiser "Processing"', 'resetProcessingStatusWithConfirm'))
        .addSeparator()
        .addSubMenu(ui.createMenu('‚úèÔ∏è Mise √† Jour en Masse')
            .addItem('üìë Cr√©er/Ouvrir Feuille Update', 'createBulkUpdateSheet')
            .addItem('‚öôÔ∏è Traiter Mises √† Jour', 'showBulkUpdateDialog')
            .addItem('üßπ Effacer Feuille Update', 'clearBulkUpdateSheetWithConfirm')
            .addItem('üìä Statistiques Update', 'showBulkUpdateStats')
            .addItem('üîÑ R√©initialiser "Processing"', 'resetUpdateProcessingStatusWithConfirm'))
        .addSeparator()
        .addSubMenu(ui.createMenu('üõ†Ô∏è Configuration')
            .addItem('üìç Configurer Point de R√©f√©rence', 'setupDistanceSortingProperties'))
        .addSeparator()
        .addItem('üîÑ Rafra√Æchir Cache', 'clearAllCaches')
        .addItem('üìä Statistiques G√©n√©rales', 'showStatistics')
        .addToUi();
}

/**
 * Generic dialog renderer using HTML templates
 */
function showDialog(viewPath, title, width, height, data) {
    const template = HtmlService.createTemplateFromFile(viewPath);

    if (data && typeof data === 'object') {
        Object.assign(template, data);
    }

    const html = template.evaluate()
        .setWidth(width)
        .setHeight(height)
        .setTitle(title);

    SpreadsheetApp.getUi().showModalDialog(html, title);
}

/**
 * Show manual entry/update dialog (unified)
 */
function showManualEntryDialog() {
    showDialog('views/dialogs/manualEntry', 'Gestion Famille', 600, 750);
}

/**
 * Show bulk import dialog
 */
function showBulkImportDialog() {
    showDialog('views/dialogs/bulkImport', 'Import en Masse', 600, 750);
}

/**
 * Show bulk update dialog
 */
function showBulkUpdateDialog() {
    showDialog('views/dialogs/bulkUpdate', 'Mise √† Jour en Masse', 600, 750);
}

// ============================================
// BULK IMPORT MENU FUNCTIONS
// ============================================

/**
 * Create Bulk Import sheet
 */
function createBulkImportSheet() {
    getOrCreateBulkImportSheet();
    SpreadsheetApp.getUi().alert(
        '‚úÖ Feuille "Bulk Import" pr√™te',
        'Vous pouvez maintenant coller vos donn√©es.\n\nColonnes requises:\nnom, prenom, nombre_adulte, nombre_enfant, adresse, code_postal, ville, telephone, criticite',
        SpreadsheetApp.getUi().ButtonSet.OK
    );
}

/**
 * Clear bulk import sheet with confirmation
 */
function clearBulkImportSheetWithConfirm() {
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
        '‚ö†Ô∏è Confirmation',
        '√ätes-vous s√ªr de vouloir effacer toutes les donn√©es de la feuille "Bulk Import" ?\n\nCette action est irr√©versible.',
        ui.ButtonSet.YES_NO
    );

    if (response === ui.Button.YES) {
        const result = clearBulkImportSheet();
        ui.alert('‚úÖ ' + result.message);
    }
}

/**
 * Show bulk import statistics
 */
function showBulkImportStats() {
    const stats = getBulkImportStatistics();
    const message = `
üìä Statistiques Import en Masse

Total de lignes: ${stats.total}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚è≥ En attente: ${stats.pending}
‚öôÔ∏è En traitement: ${stats.processing}
‚úÖ R√©ussies: ${stats.success}
‚ùå Erreurs: ${stats.error}

${stats.pending > 0 ? '\nüí° Cliquez sur "Traiter Import" pour continuer.' : ''}
`;

    SpreadsheetApp.getUi().alert('Statistiques Import', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * Reset processing status with confirmation
 */
function resetProcessingStatusWithConfirm() {
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
        'üîÑ R√©initialiser les statuts "Processing"',
        'Cette action r√©initialisera toutes les lignes "Processing" en "Pending".\n\nUtile apr√®s un timeout de script.\n\nContinuer ?',
        ui.ButtonSet.YES_NO
    );

    if (response === ui.Button.YES) {
        resetProcessingStatus();
        ui.alert('‚úÖ Statuts r√©initialis√©s');
    }
}

// ============================================
// BULK UPDATE MENU FUNCTIONS
// ============================================

/**
 * Create Bulk Update sheet
 */
function createBulkUpdateSheet() {
    getOrCreateBulkUpdateSheet();
    SpreadsheetApp.getUi().alert(
        '‚úÖ Feuille "Bulk Update" pr√™te',
        'Vous pouvez maintenant coller vos mises √† jour.\n\n‚ö†Ô∏è IMPORTANT:\n‚Ä¢ Colonne "id" OBLIGATOIRE\n‚Ä¢ Au moins une autre colonne doit contenir une valeur\n‚Ä¢ Seules les colonnes non vides seront mises √† jour',
        SpreadsheetApp.getUi().ButtonSet.OK
    );
}

/**
 * Clear bulk update sheet with confirmation
 */
function clearBulkUpdateSheetWithConfirm() {
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
        '‚ö†Ô∏è Confirmation',
        '√ätes-vous s√ªr de vouloir effacer toutes les donn√©es de la feuille "Bulk Update" ?\n\nCette action est irr√©versible.',
        ui.ButtonSet.YES_NO
    );

    if (response === ui.Button.YES) {
        const result = clearBulkUpdateSheet();
        ui.alert('‚úÖ ' + result.message);
    }
}

/**
 * Show bulk update statistics
 */
function showBulkUpdateStats() {
    const stats = getBulkUpdateStatistics();
    const message = `
üìä Statistiques Mise √† Jour en Masse

Total de lignes: ${stats.total}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚è≥ En attente: ${stats.pending}
‚öôÔ∏è En traitement: ${stats.processing}
‚úÖ R√©ussies: ${stats.success}
‚ùå Erreurs: ${stats.error}

${stats.pending > 0 ? '\nüí° Cliquez sur "Traiter Mises √† Jour" pour continuer.' : ''}
`;

    SpreadsheetApp.getUi().alert('Statistiques Update', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * Reset update processing status with confirmation
 */
function resetUpdateProcessingStatusWithConfirm() {
    const ui = SpreadsheetApp.getUi();
    const response = ui.alert(
        'üîÑ R√©initialiser les statuts "Processing"',
        'Cette action r√©initialisera toutes les lignes "Processing" en "Pending" dans Bulk Update.\n\nUtile apr√®s un timeout de script.\n\nContinuer ?',
        ui.ButtonSet.YES_NO
    );

    if (response === ui.Button.YES) {
        resetUpdateProcessingStatus();
        ui.alert('‚úÖ Statuts r√©initialis√©s');
    }
}

// ============================================
// OTHER MENU FUNCTIONS
// ============================================

/**
 * Show statistics dialog
 */
function showStatistics() {
    const stats = calculateStatistics();
    const message = `
üìä Statistiques des Familles

Total: ${stats.total}
Valid√©es: ${stats.validated}
En cours: ${stats.inProgress}
Rejet√©es: ${stats.rejected}

Adultes: ${stats.totalAdults}
Enfants: ${stats.totalChildren}
`;

    SpreadsheetApp.getUi().alert('Statistiques', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * Update script properties for distance sorting
 */
function setupDistanceSortingProperties() {
    const ui = SpreadsheetApp.getUi();
    
    const response = ui.prompt(
        'üìç Configuration: Point de r√©f√©rence',
        'Entrez la latitude du point de r√©f√©rence (ex: 47.2173):',
        ui.ButtonSet.OK_CANCEL
    );

    if (response.getSelectedButton() !== ui.Button.OK) {
        ui.alert('Configuration annul√©e');
        return;
    }

    const latitude = response.getResponseText();

    const response2 = ui.prompt(
        'üìç Configuration: Point de r√©f√©rence',
        'Entrez la longitude du point de r√©f√©rence (ex: -1.5536):',
        ui.ButtonSet.OK_CANCEL
    );

    if (response2.getSelectedButton() !== ui.Button.OK) {
        ui.alert('Configuration annul√©e');
        return;
    }

    const longitude = response2.getResponseText();

    const lat = parseFloat(latitude);
    const lng = parseFloat(longitude);

    if (isNaN(lat) || isNaN(lng)) {
        ui.alert('‚ùå Erreur', 'Coordonn√©es invalides', ui.ButtonSet.OK);
        return;
    }

    PropertiesService.getScriptProperties().setProperties({
        'REFERENCE_LATITUDE': latitude,
        'REFERENCE_LONGITUDE': longitude
    });

    CacheService.getScriptCache().removeAll([]);

    ui.alert(
        '‚úÖ Configuration enregistr√©e',
        `Point de r√©f√©rence:\nLatitude: ${latitude}\nLongitude: ${longitude}\n\n` +
        'Vous pouvez maintenant utiliser le tri par distance dans l\'API.',
        ui.ButtonSet.OK
    );

    logInfo('Distance sorting properties configured', { latitude, longitude });
}
